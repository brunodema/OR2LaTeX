[1mdiff --git a/src/BaseTypesLib/OR2L_EXCEPTION.h b/src/BaseTypesLib/OR2L_EXCEPTION.h[m
[1mdeleted file mode 100644[m
[1mindex 9400451..0000000[m
[1m--- a/src/BaseTypesLib/OR2L_EXCEPTION.h[m
[1m+++ /dev/null[m
[36m@@ -1,14 +0,0 @@[m
[31m-#pragma once[m
[31m-[m
[31m-#include <exception>[m
[31m-[m
[31m-namespace OR2L[m
[31m-{[m
[31m-	class OR2L_EXCEPTION : public std::exception[m
[31m-	{[m
[31m-	public:[m
[31m-		OR2L_EXCEPTION()[m
[31m-	};[m
[31m-}[m
[31m-[m
[31m-[m
[1mdiff --git a/src/OR2LaTeX/OR2L_Types/EXPRESSION.h b/src/OR2LaTeX/OR2L_Types/EXPRESSION.h[m
[1mindex e98f990..cca0cee 100644[m
[1m--- a/src/OR2LaTeX/OR2L_Types/EXPRESSION.h[m
[1m+++ b/src/OR2LaTeX/OR2L_Types/EXPRESSION.h[m
[36m@@ -2,6 +2,7 @@[m
 #include <unordered_map>[m
 #include "VARIABLE.h"[m
 #include "COEFFICIENT.h"[m
[32m+[m[32m#include "OR2LEXCEPTION.h"[m
 #include <varargs.h>[m
 #include <cstdarg>[m
 [m
[36m@@ -54,7 +55,7 @@[m [mnamespace OR2L[m
 [m
         EXPRESSION operator-(COEFFICIENT &coeff)[m
         {[m
[31m-            coeff.SetMultiplier(coeff.GetMultiplier() * -1); [m
[32m+[m[32m            coeff.SetMultiplier(coeff.GetMultiplier() * -1);[m
             this->InsertOrUpdate(coeff);[m
             return *this;[m
         }[m
[36m@@ -97,4 +98,11 @@[m [mnamespace OR2L[m
         coeffB.SetMultiplier(coeffB.GetMultiplier() * -1);[m
         return EXPRESSION({coeffA, coeffB});[m
     }[m
[32m+[m
[32m+[m[32m    EXPRESSION operator*(const COEFFICIENT &coeffA, COEFFICIENT &coeffB)[m
[32m+[m[32m    {[m
[32m+[m[32m        // continue from here[m
[32m+[m[41m        [m
[32m+[m[32m        throw("");[m
[32m+[m[32m    }[m
 } // namespace OR2L[m
\ No newline at end of file[m
